a.
	1. 	List<Integer> ints = new ArrayList<>();
	2. 	ints.add(1);
	3. 	ints.add(2);
	4. 	List<? extends Number> nums = ints;
	5. 	double dbl = sum(nums);
	6. 	nums.add(3.14);

- The last line will cause a compiler error because we're not supposed to add to a bounded wildcard.

b. 
	List<Object> objs = new ArrayList<>();
	objs.add(1);
	objs.add("two");
	List<? super Integer> ints = objs;
	ints.add(3);
	double dbl = sum(ints);

- The last line will not work, because the function sum only accepts subclasses of Number, but the provided parameter
	objs/ints can be of any type.